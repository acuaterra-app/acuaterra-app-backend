{
  "/api/v2/owner/users/{id}": {
    "put": {
      "tags": [
        "Owner/Users"
      ],
      "summary": "Update an existing monitor user",
      "description": "Updates the information of an existing monitor user.\n\n## Features\n\n- Updates monitor user profile information\n- Optionally changes module assignment\n- Only accessible by OWNER role users\n\n## Access Control\n\n- **Authentication**: Required (Bearer token)\n- **Role**: OWNER\n- **Permissions**:\n  - Monitor user must exist and be active\n  - Owner must have access to at least one module that the monitor is assigned to\n  - If changing module assignment, the owner must have access to the new module through their farms\n  - Validation is performed directly on the module relationships rather than requiring separate farm validation",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The ID of the monitor user to update",
          "schema": {
            "type": "integer"
          },
          "example": 57
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Full name of the monitor user",
                  "example": "John Doe Updated"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Valid email address for the monitor user",
                  "example": "john.updated@example.com"
                },
                "dni": {
                  "type": "string",
                  "description": "Document or identification number of the monitor user",
                  "example": "87654321"
                },
                "address": {
                  "type": "string",
                  "description": "Physical address where the monitor is located",
                  "example": "456 Monitoring St, Updated City"
                },
                "contact": {
                  "type": "string",
                  "description": "Contact phone number of the monitor user",
                  "example": "+0987654321"
                },
                "id_module": {
                  "type": "integer",
                  "description": "Identifier of the module to be monitored",
                  "example": 9
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Monitor user updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Monitor user updated successfully"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 57
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe Updated"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "john.updated@example.com"
                        },
                        "dni": {
                          "type": "string",
                          "example": "87654321"
                        },
                        "address": {
                          "type": "string",
                          "example": "456 Monitoring St, Updated City"
                        },
                        "contact": {
                          "type": "string",
                          "example": "+0987654321"
                        },
                        "id_rol": {
                          "type": "integer",
                          "example": 3
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-04-06T20:58:42.000Z"
                        },
                        "rol": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 3
                            },
                            "name": {
                              "type": "string",
                              "example": "MONITOR"
                            }
                          }
                        },
                        "assigned_modules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 7
                              },
                              "name": {
                                "type": "string",
                                "example": "ModuloMessias"
                              },
                              "location": {
                                "type": "string",
                                "example": "Ubicación del módulo 123"
                              },
                              "species_fish": {
                                "type": "string",
                                "example": "Especie de pez"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "errors": {
                    "type": "array",
                    "example": []
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request - Invalid input data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Validation Error"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "Field validation failed"
                        },
                        "param": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        }
                      }
                    },
                    "example": [
                      {
                        "msg": "Email must be a valid email address",
                        "param": "email",
                        "location": "body"
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing token",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Unauthorized access"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "Authentication token is missing or invalid"
                        }
                      }
                    }
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden - User does not have required permissions",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Authorization Error"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "example": [
                      {
                        "msg": "User with id 999 not found in the system or is inactive"
                      },
                      {
                        "msg": "You are not authorized to edit this Monitor user",
                        "details": "The monitor is assigned to modules from farms that you do not manage"
                      },
                      {
                        "msg": "You cannot assign this module because it belongs to a different farm",
                        "details": "The module belongs to the farm Farm A, which you do not manage"
                      },
                      {
                        "msg": "Module with id 999 does not exist in the system"
                      },
                      {
                        "msg": "Module with id 999 has no associated farm"
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found - User or module not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Validation Error"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "User with id 999 not found in the system"
                        }
                      }
                    },
                    "example": [
                      {
                        "msg": "User with id 999 not found in the system"
                      },
                      {
                        "msg": "Module with id 999 does not exist in the system"
                      },
                      {
                        "msg": "Module with id 123 has no associated farm"
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server Error"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "Error processing monitor user validation"
                        },
                        "details": {
                          "type": "string",
                          "example": "Database connection error"
                        }
                      }
                    },
                    "example": [
                      {
                        "msg": "Error processing monitor user validation",
                        "details": "Database connection error"
                      }
                    ]
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        }
      },
      "security": [
        {
          "apiKey": []
        }
      ]
    }
  }
}
