{
  "/api/v2/auth/login": {
    "post": {
      "summary": "User login",
      "tags": ["Authentication"],
      "description": "Authenticates a user with their email and password and returns an access token for accessing protected resources.\n\n## Form Fields and Validation Rules\n\n### Required Fields\nAll fields listed below are required for successful authentication.\n\n### Field Specifications\n\n- **email**\n  - **Type**: String\n  - **Format**: Email\n  - **Validation**: \n    - Must be a valid email format\n    - Must exist in the system\n    - Case insensitive\n  - **Purpose**: Identifies the user account\n\n- **password**\n  - **Type**: String\n  - **Validation**: \n    - Must match the stored password for the associated email\n    - Case sensitive\n    - Minimum 8 characters recommended for security\n  - **Purpose**: Verifies user identity\n\n- **device_id** (optional)\n  - **Type**: String\n  - **Purpose**: Identifies the user's device for notifications\n\n## Temporary Password Flow\n\nWhen a new user is created or a password is reset, the user receives a temporary password and must change it on first login. In these cases:\n\n1. The login response includes `mustChangePassword: true`\n2. The frontend should redirect the user to the password change screen\n3. The user must change their password before accessing other parts of the application\n\nOn successful authentication, the system returns a JWT token and user details including ID, email, name, role, and mustChangePassword flag. This token must be included in the Authorization header for subsequent authenticated requests.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "device_id"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address. Required. Must be a valid email format that exists in the system. Case insensitive.",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "User's password. Required. Must match the stored password for the associated email. Case sensitive. Minimum 8 characters recommended for security.",
                  "example": "********"
                },
                "device_id": {
                  "type": "string",
                  "description": "Device ID of the user's device. Required. Used to identify the device for notifications and security purposes.",
                  "example": "d12a4f7e-8b59-4c1f-9af2-0324e1142aab"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful login",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Login successful"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 12345
                          },
                          "dni": {
                            "type": "string",
                            "example": "12345678"
                          },
                          "email": {
                            "type": "string",
                            "example": "user@example.com"
                          },
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "id_rol": {
                            "type": "integer",
                            "example": 2
                          },
                          "rol": {
                            "type": "string",
                            "example": "owner"
                          },
                          "contact": {
                            "type": "string",
                            "example": "123456789"
                          },
                          "mustChangePassword": {
                            "type": "boolean",
                            "example": false,
                            "description": "Indicates if the user must change their password"
                          }
                        }
                      },
                      "mustChangePassword": {
                        "type": "boolean",
                        "example": false,
                        "description": "Appears only when the user must change their password"
                      }
                    }
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": []
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Validation error"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "Email is required"
                        },
                        "param": {
                          "type": "string",
                          "example": "email"
                        },
                        "location": {
                          "type": "string",
                          "example": "body"
                        }
                      }
                    }
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Authentication failed",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid email or password"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "example": []
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Internal server error"
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "example": []
                  },
                  "meta": {
                    "type": "object",
                    "example": {}
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

