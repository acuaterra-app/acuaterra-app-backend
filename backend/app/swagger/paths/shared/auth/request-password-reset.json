{
  "/api/v2/auth/request-password-reset": {
    "post": {
      "summary": "Request Password Reset",
      "tags": ["Authentication"],
      "description": "Allows users to initiate the password reset process by requesting a reset link via email.\n\n## Process Flow\n\n- User provides their registered email address\n- System checks if the email exists and the user is active\n- A time-limited JWT token is generated for password reset\n- An email with password reset instructions is sent to the user\n\n## Token Generation and Details\n\n### Token Payload\n- **email**: User's registered email address\n- **id**: User's unique identifier\n- **purpose**: Always set to 'password_reset'\n\n### Token Characteristics\n- **Type**: JSON Web Token (JWT)\n- **Signing Key**: JWT_SECRET environment variable\n- **Expiration**: 15 minutes\n- **Validation**: Verified using JWT library\n\n### Password Reset URL Structure\n- **Base URL**: From FRONTEND_URL environment variable\n- **Default**: http://localhost:3000\n- **Full URL**: `{BASE_URL}/reset-password?token={JWT_TOKEN}`\n\n### Frontend Token Handling\n1. Extract token from URL query parameter\n2. Validate token:\n   - Check expiration (15-minute window)\n   - Verify 'purpose' is 'password_reset'\n3. Redirect user to password reset form\n4. Send token to backend `/api/v2/auth/reset-password`\n\n## Security Considerations\n\n- Token is single-use\n- Becomes invalid after successful password reset\n- Expires after 15 minutes\n- Contains minimal user identification\n- Signed with secret key to prevent tampering\n\n## Possible Errors\n- User not found\n- User account inactive\n- Email sending failure\n\n## Form Fields and Validation Rules\n\n### Required Fields\n- **email**: User's registered email address\n\n### Field Specifications\n\n- **email**\n  - **Type**: String\n  - **Format**: Email\n  - **Validation**: \n    - Must be a valid email format\n    - Must exist in the system\n    - User must be active\n  - **Purpose**: Identifies the user account for password reset",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's registered email address. Required. Must be a valid email format that exists in the system.",
                  "example": "user@example.com"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password reset email sent successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "msg": {
                    "type": "string",
                    "example": "An email has been sent with instructions to reset your password"
                  },
                  "error": {
                    "type": "boolean",
                    "example": false
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "example": []
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Validation error or account issues",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "msg": {
                    "type": "string",
                    "example": "Error requesting password reset"
                  },
                  "error": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    },
                    "example": [
                      {"msg": "User not found"},
                      {"msg": "User is inactive"}
                    ]
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "msg": {
                    "type": "string",
                    "example": "Error requesting password reset"
                  },
                  "error": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "array",
                    "example": []
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "msg": {
                          "type": "string",
                          "example": "Internal server error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

